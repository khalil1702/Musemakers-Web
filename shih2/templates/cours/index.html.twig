{% extends 'base2.html.twig' %}

{% block title %}Cours index{% endblock %}

{% block body %}
    <h1>Cours index</h1>
   
    <table class="table">
        <thead>
            <tr>
                <th>IdCours</th>
                <th>TitreCours</th>
                <th>DescriCours</th>
                <th>DatedebutCours</th>
                <th>DatefinCours</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for cour in cours %}
            <tr>
                <td>{{ cour.idCours }}</td>
                <td>{{ cour.titreCours }}</td>
                <td>{{ cour.descriCours }}</td>
                <td>{{ cour.datedebutCours ? cour.datedebutCours|date('Y-m-d') : '' }}</td>
                <td>{{ cour.datefinCours ? cour.datefinCours|date('Y-m-d') : '' }}</td>
                <td>
                    <a href="{{ path('app_cours_show', {'idCours': cour.idCours}) }}" class="btn btn-info">show</a>
                    <a href="{{ path('app_cours_edit', {'idCours': cour.idCours}) }}" class="btn btn-primary" style="background-color: #343a40; border-color: #343a40;">edit</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="6">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
 

   
 <form id="searchForm" action="{{ path('app_cours_index_search') }}" method="GET">
        <input type="text" id="searchInput" name="search" placeholder="Rechercher...">
    </form>
 <script>
        document.getElementById('searchInput').addEventListener('input', function() {
            var searchTerm = this.value;
            var form = document.getElementById('searchForm');

            // Envoi de la requête AJAX
            fetch(form.action + '?search=' + searchTerm, {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                // Mettre à jour les résultats de la recherche dans l'élément 'searchResults'
                // Assuming 'searchResults' is a container where search results are displayed
                document.getElementById('searchResults').innerHTML = ''; // Clear previous results
                data.forEach(course => {
                    // Create HTML elements for each course and append to 'searchResults'
                    var courseElement = document.createElement('div');
                    courseElement.textContent = course.titreCours; // Or any other property you want to display
                    document.getElementById('searchResults').appendChild(courseElement);
                });
            });
        });

</script>
    <div id="searchResults"></div>
    <select id="sortSelect">
        <option value="default_field">Par défaut</option>
        <option value="titreCours">Titre</option>         
        <option value="DescriCours">DescriCours</option>
        <option value="datedebutCours">Date de début</option>
        <option value="datefinCours">Date de fin</option>
    </select>
    
    <script>
        document.getElementById('sortSelect').addEventListener('change', function() {
            var sortBy = this.value;

            fetch('{{ path('app_cours_index_search') }}?sort_by=' + sortBy, {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.text())
            .then(data => {
                document.getElementById('searchResults').innerHTML = data;
            });
        });
    </script>

    <!-- Pagination -->
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item {% if knp_pagination.currentPageNumber == 1 %}disabled{% endif %}">
                <a class="page-link" href="{{ path('app_cours_index', {'page': knp_pagination.currentPageNumber - 1 }) }}" tabindex="-1"> < </a>
            </li>
            {% for page in 1..knp_pagination.pageCount %}
                <li class="page-item {% if page == knp_pagination.currentPageNumber %}active{% endif %}">
                    <a class="page-link" href="{{ path('app_cours_index', {'page': page }) }}">{{ page }}</a>
                </li>
            {% endfor %}
            <li class="page-item {% if knp_pagination.currentPageNumber == knp_pagination.pageCount %}disabled{% endif %}">
                <a class="page-link" href="{{ path('app_cours_index', {'page': knp_pagination.currentPageNumber + 1 }) }}"> > </a>
            </li>
        </ul>
    </nav>
    <!-- End Pagination -->

    <a href="{{ path('app_cours_new') }}" class="btn btn-success">
    <i class="mdi mdi-plus"></i> ADD Cour
</a>

{% endblock %}
